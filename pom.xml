<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.1</version>
		<relativePath/> <!-- lookup parent from repository-->
		<!-- (line above)You’ll notice that your Maven project inherits from a spring-boot-starter-parent project.
		It does this for dependency management reasons. Whereas you would have to specify versions
		of third party libraries in your pom.xml file without this inheritance,
		Spring Boot pre-defines a ton of fixed third-party dependency versions in that parent project for you.
		You can lookup all the dependency with mvn dependency:tree-->

	</parent>
	<groupId>com.vesalukkarila</groupId>
	<artifactId>confident-08-spring-data-jdbc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>confident-08-spring-data-jdbc</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>

	<properties>
		<java.version>17</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!--sets up Spring, Spring MVC and a lot more. There’s also a dependency
		that enables Spring Boot’s testing facilities (think: the @SpringBootTest annotation etc.)-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>	<!--@springboottest annotations etc-->
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--Starting with Spring Boot 2.4+, hibernate-validator needs to be added manually (not included in springboot-starter-web-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
<!--no need to explicitly define jackon's version, as Spring Boot’s parent pom.xml project will handle the version number for you-->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId> <!--`-->
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId> <!---->
			<artifactId>h2</artifactId>
		</dependency>
	</dependencies>


	<!--  Spring Boot Maven plugin, which, among other things,
	will make sure that after building your project with mvn clean package,
	you’ll get a correctly working, executable fat .jar.
	somewhat equivalent to the shade plugin, though it works entirely differently, under the hood.-->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
